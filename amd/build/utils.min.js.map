{"version":3,"file":"utils.min.js","sources":["../src/utils.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * qbank_generatequestion utils library.\n *\n * @copyright  ISB Bayern, 2024\n * @author     Dr. Peter Mayer\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport { makeRequest } from 'local_ai_manager/make_request';\nimport Selectors from './selectors';\n\n/**\n * Get the Chat result.\n */\nexport const getLLMresponse = () => {\n    window.console.log(\"POS 1\");\n    var prompt = document.getElementById(Selectors.elements.taPrompt).value;\n\n    // Shows the results box. This should happen before the real result is shown,\n    // in order to inform the user, that we are working on it.\n    // var prompt = document.getElementById(Selectors.elements.divresults).value();\n    document.getElementById(Selectors.elements.divresults).classList.remove(\"hidden\");\n    document.getElementById(Selectors.elements.taResult).value = \"Bitte warten, das kann ein paar Sekunden dauern!\";\n\n    const options = [];\n\n    retrieveResult('chat', prompt, options).then(requestresult => {\n\n        // Early exit if an error occured. Print out the error message to the output textarea.\n        if (requestresult.string == 'error') {\n            document.getElementById(Selectors.elements.taResult).value = requestresult.result;\n            return;\n        }\n\n        document.getElementById(Selectors.elements.taResult).value = requestresult.result;\n    });\n};\n\n/**\n * Get the async answer from the LLM.\n *\n * @param {string} purpose\n * @param {string} prompt\n * @param {array} options\n * @returns {string}\n */\nconst retrieveResult = async (purpose, prompt, options = []) => {\n    let result = await makeRequest(purpose, prompt, JSON.stringify(options));\n    return result;\n};\n"],"names":["window","console","log","prompt","document","getElementById","Selectors","elements","taPrompt","value","divresults","classList","remove","taResult","retrieveResult","then","requestresult","string","result","async","purpose","options","JSON","stringify"],"mappings":";;;;;;;kLA6B8B,KAC1BA,OAAOC,QAAQC,IAAI,aACfC,OAASC,SAASC,eAAeC,mBAAUC,SAASC,UAAUC,MAKlEL,SAASC,eAAeC,mBAAUC,SAASG,YAAYC,UAAUC,OAAO,UACxER,SAASC,eAAeC,mBAAUC,SAASM,UAAUJ,MAAQ,mDAI7DK,eAAe,OAAQX,OAFP,IAEwBY,MAAKC,gBAGrCA,cAAcC,OAKlBb,SAASC,eAAeC,mBAAUC,SAASM,UAAUJ,MAAQO,cAAcE,iBAY7EJ,eAAiBK,eAAOC,QAASjB,YAAQkB,+DAAU,GACjDH,aAAe,6BAAYE,QAASjB,OAAQmB,KAAKC,UAAUF,iBACxDH"}